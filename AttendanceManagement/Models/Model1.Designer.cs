//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AMSModel", "FK_Attendance_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AttendanceManagement.Models.Employee), "Attendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AttendanceManagement.Models.Attendance), true)]
[assembly: EdmRelationshipAttribute("AMSModel", "FK_EmployeeTask_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AttendanceManagement.Models.Employee), "EmployeeTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AttendanceManagement.Models.EmployeeTask), true)]
[assembly: EdmRelationshipAttribute("AMSModel", "FK_Leaves_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AttendanceManagement.Models.Employee), "Leave", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AttendanceManagement.Models.Leave), true)]
[assembly: EdmRelationshipAttribute("AMSModel", "FK_Manager_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AttendanceManagement.Models.Employee), "Employee1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AttendanceManagement.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("AMSModel", "FK_LeaveRequest_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AttendanceManagement.Models.Employee), "LeaveRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AttendanceManagement.Models.LeaveRequest), true)]

#endregion

namespace AttendanceManagement.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AMSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AMSEntities object using the connection string found in the 'AMSEntities' section of the application configuration file.
        /// </summary>
        public AMSEntities() : base("name=AMSEntities", "AMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AMSEntities object.
        /// </summary>
        public AMSEntities(string connectionString) : base(connectionString, "AMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AMSEntities object.
        /// </summary>
        public AMSEntities(EntityConnection connection) : base(connection, "AMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attendance> Attendances
        {
            get
            {
                if ((_Attendances == null))
                {
                    _Attendances = base.CreateObjectSet<Attendance>("Attendances");
                }
                return _Attendances;
            }
        }
        private ObjectSet<Attendance> _Attendances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeTask> EmployeeTasks
        {
            get
            {
                if ((_EmployeeTasks == null))
                {
                    _EmployeeTasks = base.CreateObjectSet<EmployeeTask>("EmployeeTasks");
                }
                return _EmployeeTasks;
            }
        }
        private ObjectSet<EmployeeTask> _EmployeeTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Holiday> Holidays
        {
            get
            {
                if ((_Holidays == null))
                {
                    _Holidays = base.CreateObjectSet<Holiday>("Holidays");
                }
                return _Holidays;
            }
        }
        private ObjectSet<Holiday> _Holidays;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Leave> Leaves
        {
            get
            {
                if ((_Leaves == null))
                {
                    _Leaves = base.CreateObjectSet<Leave>("Leaves");
                }
                return _Leaves;
            }
        }
        private ObjectSet<Leave> _Leaves;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaveRequest> LeaveRequests
        {
            get
            {
                if ((_LeaveRequests == null))
                {
                    _LeaveRequests = base.CreateObjectSet<LeaveRequest>("LeaveRequests");
                }
                return _LeaveRequests;
            }
        }
        private ObjectSet<LeaveRequest> _LeaveRequests;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attendances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttendances(Attendance attendance)
        {
            base.AddObject("Attendances", attendance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTasks(EmployeeTask employeeTask)
        {
            base.AddObject("EmployeeTasks", employeeTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Holidays EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHolidays(Holiday holiday)
        {
            base.AddObject("Holidays", holiday);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leaves EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaves(Leave leave)
        {
            base.AddObject("Leaves", leave);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaveRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaveRequests(LeaveRequest leaveRequest)
        {
            base.AddObject("LeaveRequests", leaveRequest);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AMSModel", Name="Attendance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attendance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attendance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Attendance CreateAttendance(global::System.Int32 id, global::System.DateTime date, global::System.Int32 employeeId, global::System.String status)
        {
            Attendance attendance = new Attendance();
            attendance.Id = id;
            attendance.Date = date;
            attendance.EmployeeId = employeeId;
            attendance.Status = status;
            return attendance;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value, "EmployeeId");
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_Attendance_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Attendance_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Attendance_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Attendance_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("AMSModel.FK_Attendance_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AMSModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeId, global::System.String name, global::System.String username, global::System.String password)
        {
            Employee employee = new Employee();
            employee.EmployeeId = employeeId;
            employee.Name = name;
            employee.Username = username;
            employee.Password = password;
            return employee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value, "EmployeeId");
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, true, "Designation");
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true, "Gender");
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerId
        {
            get
            {
                return _ManagerId;
            }
            set
            {
                OnManagerIdChanging(value);
                ReportPropertyChanging("ManagerId");
                _ManagerId = StructuralObject.SetValidValue(value, "ManagerId");
                ReportPropertyChanged("ManagerId");
                OnManagerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerId;
        partial void OnManagerIdChanging(Nullable<global::System.Int32> value);
        partial void OnManagerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_Attendance_Employee", "Attendance")]
        public EntityCollection<Attendance> Attendances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attendance>("AMSModel.FK_Attendance_Employee", "Attendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attendance>("AMSModel.FK_Attendance_Employee", "Attendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_EmployeeTask_Employee", "EmployeeTask")]
        public EntityCollection<EmployeeTask> EmployeeTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTask>("AMSModel.FK_EmployeeTask_Employee", "EmployeeTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTask>("AMSModel.FK_EmployeeTask_Employee", "EmployeeTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_Leaves_Employee", "Leave")]
        public Leave Leave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leave>("AMSModel.FK_Leaves_Employee", "Leave").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leave>("AMSModel.FK_Leaves_Employee", "Leave").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Leave> LeaveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Leave>("AMSModel.FK_Leaves_Employee", "Leave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Leave>("AMSModel.FK_Leaves_Employee", "Leave", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_Manager_Employee", "Employee1")]
        public EntityCollection<Employee> Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("AMSModel.FK_Manager_Employee", "Employee1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("AMSModel.FK_Manager_Employee", "Employee1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_Manager_Employee", "Employee")]
        public Employee Employee2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Manager_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Manager_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Manager_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("AMSModel.FK_Manager_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_LeaveRequest_Employee", "LeaveRequest")]
        public EntityCollection<LeaveRequest> LeaveRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeaveRequest>("AMSModel.FK_LeaveRequest_Employee", "LeaveRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeaveRequest>("AMSModel.FK_LeaveRequest_Employee", "LeaveRequest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AMSModel", Name="EmployeeTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeTask object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="tasksDone">Initial value of the TasksDone property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        public static EmployeeTask CreateEmployeeTask(global::System.Int32 id, global::System.DateTime date, global::System.TimeSpan startTime, global::System.TimeSpan endTime, global::System.String tasksDone, global::System.Int32 employeeId)
        {
            EmployeeTask employeeTask = new EmployeeTask();
            employeeTask.Id = id;
            employeeTask.Date = date;
            employeeTask.StartTime = startTime;
            employeeTask.EndTime = endTime;
            employeeTask.TasksDone = tasksDone;
            employeeTask.EmployeeId = employeeId;
            return employeeTask;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.TimeSpan _StartTime;
        partial void OnStartTimeChanging(global::System.TimeSpan value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.TimeSpan _EndTime;
        partial void OnEndTimeChanging(global::System.TimeSpan value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TasksDone
        {
            get
            {
                return _TasksDone;
            }
            set
            {
                OnTasksDoneChanging(value);
                ReportPropertyChanging("TasksDone");
                _TasksDone = StructuralObject.SetValidValue(value, false, "TasksDone");
                ReportPropertyChanged("TasksDone");
                OnTasksDoneChanged();
            }
        }
        private global::System.String _TasksDone;
        partial void OnTasksDoneChanging(global::System.String value);
        partial void OnTasksDoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value, "EmployeeId");
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_EmployeeTask_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_EmployeeTask_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_EmployeeTask_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_EmployeeTask_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("AMSModel.FK_EmployeeTask_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AMSModel", Name="Holiday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Holiday : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Holiday object.
        /// </summary>
        /// <param name="holidayId">Initial value of the HolidayId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Holiday CreateHoliday(global::System.Int32 holidayId, global::System.DateTime date, global::System.String name, global::System.String type)
        {
            Holiday holiday = new Holiday();
            holiday.HolidayId = holidayId;
            holiday.Date = date;
            holiday.Name = name;
            holiday.Type = type;
            return holiday;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HolidayId
        {
            get
            {
                return _HolidayId;
            }
            set
            {
                if (_HolidayId != value)
                {
                    OnHolidayIdChanging(value);
                    ReportPropertyChanging("HolidayId");
                    _HolidayId = StructuralObject.SetValidValue(value, "HolidayId");
                    ReportPropertyChanged("HolidayId");
                    OnHolidayIdChanged();
                }
            }
        }
        private global::System.Int32 _HolidayId;
        partial void OnHolidayIdChanging(global::System.Int32 value);
        partial void OnHolidayIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AMSModel", Name="Leave")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Leave : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Leave object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="casualLeaves">Initial value of the CasualLeaves property.</param>
        /// <param name="sickLeaves">Initial value of the SickLeaves property.</param>
        /// <param name="maternalLeaves">Initial value of the MaternalLeaves property.</param>
        /// <param name="optionalHolidays">Initial value of the OptionalHolidays property.</param>
        public static Leave CreateLeave(global::System.Int32 employeeId, global::System.Int32 casualLeaves, global::System.Int32 sickLeaves, global::System.Int32 maternalLeaves, global::System.Int32 optionalHolidays)
        {
            Leave leave = new Leave();
            leave.EmployeeId = employeeId;
            leave.CasualLeaves = casualLeaves;
            leave.SickLeaves = sickLeaves;
            leave.MaternalLeaves = maternalLeaves;
            leave.OptionalHolidays = optionalHolidays;
            return leave;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value, "EmployeeId");
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CasualLeaves
        {
            get
            {
                return _CasualLeaves;
            }
            set
            {
                OnCasualLeavesChanging(value);
                ReportPropertyChanging("CasualLeaves");
                _CasualLeaves = StructuralObject.SetValidValue(value, "CasualLeaves");
                ReportPropertyChanged("CasualLeaves");
                OnCasualLeavesChanged();
            }
        }
        private global::System.Int32 _CasualLeaves;
        partial void OnCasualLeavesChanging(global::System.Int32 value);
        partial void OnCasualLeavesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SickLeaves
        {
            get
            {
                return _SickLeaves;
            }
            set
            {
                OnSickLeavesChanging(value);
                ReportPropertyChanging("SickLeaves");
                _SickLeaves = StructuralObject.SetValidValue(value, "SickLeaves");
                ReportPropertyChanged("SickLeaves");
                OnSickLeavesChanged();
            }
        }
        private global::System.Int32 _SickLeaves;
        partial void OnSickLeavesChanging(global::System.Int32 value);
        partial void OnSickLeavesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaternalLeaves
        {
            get
            {
                return _MaternalLeaves;
            }
            set
            {
                OnMaternalLeavesChanging(value);
                ReportPropertyChanging("MaternalLeaves");
                _MaternalLeaves = StructuralObject.SetValidValue(value, "MaternalLeaves");
                ReportPropertyChanged("MaternalLeaves");
                OnMaternalLeavesChanged();
            }
        }
        private global::System.Int32 _MaternalLeaves;
        partial void OnMaternalLeavesChanging(global::System.Int32 value);
        partial void OnMaternalLeavesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionalHolidays
        {
            get
            {
                return _OptionalHolidays;
            }
            set
            {
                OnOptionalHolidaysChanging(value);
                ReportPropertyChanging("OptionalHolidays");
                _OptionalHolidays = StructuralObject.SetValidValue(value, "OptionalHolidays");
                ReportPropertyChanged("OptionalHolidays");
                OnOptionalHolidaysChanged();
            }
        }
        private global::System.Int32 _OptionalHolidays;
        partial void OnOptionalHolidaysChanging(global::System.Int32 value);
        partial void OnOptionalHolidaysChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_Leaves_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Leaves_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Leaves_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_Leaves_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("AMSModel.FK_Leaves_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AMSModel", Name="LeaveRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaveRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaveRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateOfApplication">Initial value of the DateOfApplication property.</param>
        /// <param name="fromDate">Initial value of the FromDate property.</param>
        /// <param name="toDate">Initial value of the ToDate property.</param>
        /// <param name="typeOfLeave">Initial value of the TypeOfLeave property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="employee_Id">Initial value of the Employee_Id property.</param>
        public static LeaveRequest CreateLeaveRequest(global::System.Int32 id, global::System.DateTime dateOfApplication, global::System.DateTime fromDate, global::System.DateTime toDate, global::System.String typeOfLeave, global::System.String reason, global::System.Int32 employee_Id)
        {
            LeaveRequest leaveRequest = new LeaveRequest();
            leaveRequest.Id = id;
            leaveRequest.DateOfApplication = dateOfApplication;
            leaveRequest.FromDate = fromDate;
            leaveRequest.ToDate = toDate;
            leaveRequest.TypeOfLeave = typeOfLeave;
            leaveRequest.Reason = reason;
            leaveRequest.Employee_Id = employee_Id;
            return leaveRequest;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfApplication
        {
            get
            {
                return _DateOfApplication;
            }
            set
            {
                OnDateOfApplicationChanging(value);
                ReportPropertyChanging("DateOfApplication");
                _DateOfApplication = StructuralObject.SetValidValue(value, "DateOfApplication");
                ReportPropertyChanged("DateOfApplication");
                OnDateOfApplicationChanged();
            }
        }
        private global::System.DateTime _DateOfApplication;
        partial void OnDateOfApplicationChanging(global::System.DateTime value);
        partial void OnDateOfApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value, "FromDate");
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private global::System.DateTime _FromDate;
        partial void OnFromDateChanging(global::System.DateTime value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value, "ToDate");
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private global::System.DateTime _ToDate;
        partial void OnToDateChanging(global::System.DateTime value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeOfLeave
        {
            get
            {
                return _TypeOfLeave;
            }
            set
            {
                OnTypeOfLeaveChanging(value);
                ReportPropertyChanging("TypeOfLeave");
                _TypeOfLeave = StructuralObject.SetValidValue(value, false, "TypeOfLeave");
                ReportPropertyChanged("TypeOfLeave");
                OnTypeOfLeaveChanged();
            }
        }
        private global::System.String _TypeOfLeave;
        partial void OnTypeOfLeaveChanging(global::System.String value);
        partial void OnTypeOfLeaveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false, "Reason");
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Employee_Id
        {
            get
            {
                return _Employee_Id;
            }
            set
            {
                OnEmployee_IdChanging(value);
                ReportPropertyChanging("Employee_Id");
                _Employee_Id = StructuralObject.SetValidValue(value, "Employee_Id");
                ReportPropertyChanged("Employee_Id");
                OnEmployee_IdChanged();
            }
        }
        private global::System.Int32 _Employee_Id;
        partial void OnEmployee_IdChanging(global::System.Int32 value);
        partial void OnEmployee_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AMSModel", "FK_LeaveRequest_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_LeaveRequest_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_LeaveRequest_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("AMSModel.FK_LeaveRequest_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("AMSModel.FK_LeaveRequest_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
